upstream php-handler {
    server wordpress:9000;
}

server {
    if ($WP_ENV = 'development') {
        listen 80;
        listen [::]:80;
        server_name wordpress.localhost;

        return 301 https://$server_name$request_uri;
    }
}

server {

    if ($WP_ENV = 'development') {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name wordpress.localhost;
    }

    if ($WP_ENV = 'staging') {
        listen 80;
        listen [::]:80;
        server_name wordpress.localhost;
    }

    if ($WP_ENV = 'production') {
        listen 80;
        listen [::]:80;
        server_name wordpress.localhost;
    }

    root /var/www/html/web;
    index index.php;

    client_max_body_size 100M;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* /app/uploads/.*.php$ {
        deny all;
    }

    rewrite ^/(wp-.*.php)$ /wp/$1 last;
    rewrite ^/(wp-(content|admin|includes).*) /wp/$1 last;

    location ~ /\.ht {
        deny all;
    }

    location ~ \.php$ {
        fastcgi_hide_header X-Powered-By;
        proxy_hide_header X-Powered-By;

        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;

        try_files $fastcgi_script_name =404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;

        fastcgi_param modHeadersAvailable true; # Avoid sending the security headers twice
        fastcgi_param front_controller_active true; # Enable pretty urls
        fastcgi_pass php-handler;

        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;

    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }

    if ($WP_ENV = 'development') {
        #ssl
        ssl_certificate /etc/nginx/ssl/certs/wp.crt;
        ssl_certificate_key /etc/nginx/ssl/private/wp.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers off;
    }

    # Log files
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}